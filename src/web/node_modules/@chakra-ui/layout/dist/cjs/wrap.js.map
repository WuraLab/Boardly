{"version":3,"sources":["../../src/wrap.tsx"],"names":["Wrap","props","ref","spacing","children","justify","direction","align","className","shouldWrapChildren","rest","theme","itemSpacing","value","margin","groupSpacing","groupStyles","display","flexWrap","justifyContent","alignItems","flexDirection","listStyleType","padding","itemStyles","_children","React","Children","map","child","index","item","__DEV__","displayName","WrapItem","styles"],"mappings":"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","sourcesContent":["import {\n  chakra,\n  css,\n  forwardRef,\n  StylesProvider,\n  SystemProps,\n  SystemStyleObject,\n  useStyles,\n  useTheme,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx, mapResponsive, __DEV__ } from \"@chakra-ui/utils\"\nimport * as React from \"react\"\n\nexport interface WrapProps extends HTMLChakraProps<\"div\"> {\n  /**\n   * The space between the each child (even if it wraps)\n   * @type SystemProps[\"margin\"]\n   */\n  spacing?: SystemProps[\"margin\"]\n  /**\n   * The `justify-content` value (for cross-axis alignment)\n   * @type SystemProps[\"justifyContent\"]\n   */\n  justify?: SystemProps[\"justifyContent\"]\n  /**\n   * The `align-items` value (for main axis alignment)\n   * @type SystemProps[\"alignItems\"]\n   */\n  align?: SystemProps[\"alignItems\"]\n  /**\n   * The `flex-direction` value\n   * @type SystemProps[\"flexDirection\"]\n   */\n  direction?: SystemProps[\"flexDirection\"]\n  /**\n   * If `true`, the children will be wrapped in a `WrapItem`\n   */\n  shouldWrapChildren?: boolean\n}\n\n/**\n * Layout component used to stack elements that differ in length\n * and are liable to wrap.\n *\n * Common use cases:\n * - Buttons that appear together at the end of forms\n * - Lists of tags and chips\n *\n * @see Docs https://chakra-ui.com/docs/layout/wrap\n */\nexport const Wrap = forwardRef<WrapProps, \"div\">((props, ref) => {\n  const {\n    spacing = \"0.5rem\",\n    children,\n    justify,\n    direction,\n    align,\n    className,\n    shouldWrapChildren,\n    ...rest\n  } = props\n\n  const theme = useTheme()\n\n  const itemSpacing = mapResponsive(spacing, (value) => {\n    const { margin } = css({ margin: value })(theme)\n    return `calc(${margin} / 2)`\n  })\n\n  const groupSpacing = mapResponsive(spacing, (value) => {\n    const { margin } = css({ margin: value })(theme)\n    return `calc(${margin} / 2 * -1)`\n  })\n\n  const groupStyles: SystemStyleObject = {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: justify,\n    alignItems: align,\n    flexDirection: direction,\n    listStyleType: \"none\",\n    padding: \"0\",\n    margin: groupSpacing,\n  }\n\n  const itemStyles: SystemStyleObject = {\n    display: \"flex\",\n    alignItems: \"flex-start\",\n    margin: itemSpacing,\n  }\n\n  const _children = shouldWrapChildren\n    ? React.Children.map(children, (child, index) => (\n        <WrapItem key={index}>{child}</WrapItem>\n      ))\n    : children\n\n  return (\n    <StylesProvider value={{ item: itemStyles }}>\n      <chakra.div ref={ref} className={cx(\"chakra-wrap\", className)} {...rest}>\n        <chakra.ul className=\"chakra-wrap__list\" __css={groupStyles}>\n          {_children}\n        </chakra.ul>\n      </chakra.div>\n    </StylesProvider>\n  )\n})\n\nif (__DEV__) {\n  Wrap.displayName = \"Wrap\"\n}\n\nexport interface WrapItemProps extends HTMLChakraProps<\"li\"> {}\n\nexport const WrapItem = forwardRef<WrapItemProps, \"li\">((props, ref) => {\n  const { className, ...rest } = props\n  const styles = useStyles()\n  return (\n    <chakra.li\n      ref={ref}\n      __css={styles.item}\n      className={cx(\"chakra-wrap__listitem\", className)}\n      {...rest}\n    />\n  )\n})\n\nif (__DEV__) {\n  WrapItem.displayName = \"WrapItem\"\n}\n"],"file":"wrap.js"}