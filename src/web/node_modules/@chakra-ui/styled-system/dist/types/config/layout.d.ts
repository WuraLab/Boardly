import * as CSS from "csstype";
import { Length, Token } from "../utils";
/**
 * Types for layout related CSS properties
 */
export interface LayoutProps {
    /**
     * The CSS `display` property
     */
    display?: Token<CSS.Property.Display>;
    /**
     * The CSS `display` property
     */
    d?: Token<CSS.Property.Display>;
    /**
     * The CSS `width` property
     */
    width?: Token<CSS.Property.Width | number, "sizes">;
    /**
     * The CSS `width` property
     */
    w?: Token<CSS.Property.Width | number, "sizes">;
    inlineSize?: Token<CSS.Property.InlineSize | number, "sizes">;
    /**
     * The CSS `width` and `height` property
     */
    boxSize?: Token<CSS.Property.Width | number, "sizes">;
    /**
     * The CSS `max-width` property
     */
    maxWidth?: Token<CSS.Property.MaxWidth | number, "sizes">;
    /**
     * The CSS `max-width` property
     */
    maxW?: Token<CSS.Property.MaxWidth | number, "sizes">;
    maxInlineSize?: Token<CSS.Property.MaxInlineSize | number, "sizes">;
    /**
     * The CSS `min-width` property
     */
    minWidth?: Token<CSS.Property.MinWidth | number, "sizes">;
    /**
     * The CSS `min-width` property
     */
    minW?: Token<CSS.Property.MinWidth | number, "sizes">;
    minInlineSize?: Token<CSS.Property.MinInlineSize | number, "sizes">;
    /**
     * The CSS `height` property
     */
    height?: Token<CSS.Property.Height | number, "sizes">;
    /**
     * The CSS `height` property
     */
    h?: Token<CSS.Property.Height | number, "sizes">;
    blockSize?: Token<CSS.Property.BlockSize | number, "sizes">;
    /**
     * The CSS `max-height` property
     */
    maxHeight?: Token<CSS.Property.MaxHeight | number, "sizes">;
    /**
     * The CSS `max-height` property
     */
    maxH?: Token<CSS.Property.MaxHeight | number, "sizes">;
    maxBlockSize?: Token<CSS.Property.MaxBlockSize | number, "sizes">;
    /**
     * The CSS `min-height` property
     */
    minHeight?: Token<CSS.Property.MinHeight | number, "sizes">;
    /**
     * The CSS `min-height` property
     */
    minH?: Token<CSS.Property.MinHeight | number, "sizes">;
    minBlockSize?: Token<CSS.Property.MinBlockSize | number, "sizes">;
    /**
     * The CSS `vertical-align` property
     */
    verticalAlign?: Token<CSS.Property.VerticalAlign<Length>>;
    /**
     * The CSS `overflow` property
     */
    overflow?: Token<CSS.Property.Overflow>;
    /**
     * The CSS `overflow-x` property
     */
    overflowX?: Token<CSS.Property.OverflowX>;
    /**
     * The CSS `overflow-y` property
     */
    overflowY?: Token<CSS.Property.OverflowY>;
    /**
     * The CSS `box-sizing` property
     */
    boxSizing?: CSS.Property.BoxSizing;
}
export declare const layout: import("../core").Parser;
export declare const layoutParser: {
    (props: Record<string, any>): Record<string, any>;
    config: import("../core").PropConfig;
    propNames: string[];
    cache: Map<string, any>;
};
