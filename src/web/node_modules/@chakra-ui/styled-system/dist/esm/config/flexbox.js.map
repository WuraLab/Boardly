{"version":3,"sources":["../../../src/config/flexbox.ts"],"names":["createParser","system","t","config","alignItems","alignContent","justifyItems","justifyContent","flexWrap","flexDirection","flex","flexFlow","flexGrow","flexShrink","flexBasis","sizes","justifySelf","alignSelf","order","placeItems","placeContent","placeSelf","flexDir","prop","flexbox","flexboxParser"],"mappings":"AACA,SAASA,YAAT,EAA+BC,MAA/B,QAA6C,SAA7C;AACA,SAAwBC,CAAxB,QAAiC,UAAjC;AAEA,IAAMC,MAAc,GAAG;AACrBC,EAAAA,UAAU,EAAE,IADS;AAErBC,EAAAA,YAAY,EAAE,IAFO;AAGrBC,EAAAA,YAAY,EAAE,IAHO;AAIrBC,EAAAA,cAAc,EAAE,IAJK;AAKrBC,EAAAA,QAAQ,EAAE,IALW;AAMrBC,EAAAA,aAAa,EAAE,IANM;AAOrBC,EAAAA,IAAI,EAAE,IAPe;AAQrBC,EAAAA,QAAQ,EAAE,IARW;AASrBC,EAAAA,QAAQ,EAAE,IATW;AAUrBC,EAAAA,UAAU,EAAE,IAVS;AAWrBC,EAAAA,SAAS,EAAEZ,CAAC,CAACa,KAAF,CAAQ,WAAR,CAXU;AAYrBC,EAAAA,WAAW,EAAE,IAZQ;AAarBC,EAAAA,SAAS,EAAE,IAbU;AAcrBC,EAAAA,KAAK,EAAE,IAdc;AAerBC,EAAAA,UAAU,EAAE,IAfS;AAgBrBC,EAAAA,YAAY,EAAE,IAhBO;AAiBrBC,EAAAA,SAAS,EAAE,IAjBU;AAkBrBC,EAAAA,OAAO,EAAEpB,CAAC,CAACqB,IAAF,CAAO,eAAP;AAlBY,CAAvB;AA+LA,OAAO,IAAMC,OAAO,GAAGvB,MAAM,CAACE,MAAD,CAAtB;AACP,OAAO,IAAMsB,aAAa,GAAGzB,YAAY,CAACG,MAAD,CAAlC","sourcesContent":["import * as CSS from \"csstype\"\nimport { createParser, Config, system } from \"../core\"\nimport { Token, Length, t } from \"../utils\"\n\nconst config: Config = {\n  alignItems: true,\n  alignContent: true,\n  justifyItems: true,\n  justifyContent: true,\n  flexWrap: true,\n  flexDirection: true,\n  flex: true,\n  flexFlow: true,\n  flexGrow: true,\n  flexShrink: true,\n  flexBasis: t.sizes(\"flexBasis\"),\n  justifySelf: true,\n  alignSelf: true,\n  order: true,\n  placeItems: true,\n  placeContent: true,\n  placeSelf: true,\n  flexDir: t.prop(\"flexDirection\"),\n}\n\nexport interface FlexboxProps {\n  /**\n   * The CSS `align-items` property.\n   *\n   * It defines the `align-self` value on all direct children as a group.\n   *\n   * - In Flexbox, it controls the alignment of items on the Cross Axis.\n   * - In Grid Layout, it controls the alignment of items on the Block Axis within their grid area.\n   *\n   * @see [Mozilla Docs](https://developer.mozilla.org/docs/Web/CSS/align-items)\n   */\n  alignItems?: Token<CSS.Property.AlignItems>\n  /**\n   * The CSS `align-content` property.\n   *\n   * It defines the distribution of space between and around\n   * content items along a flexbox's cross-axis or a grid's block axis.\n   *\n   * @see [Mozilla Docs](https://developer.mozilla.org/docs/Web/CSS/align-content)\n   */\n  alignContent?: Token<CSS.Property.AlignContent>\n  /**\n   * The CSS `justify-items` property.\n   *\n   * It defines the default `justify-self` for all items of the box,\n   * giving them all a default way of justifying each box\n   * along the appropriate axis.\n   *\n   * @see [Mozilla Docs](https://developer.mozilla.org/docs/Web/CSS/justify-items)\n   */\n  justifyItems?: Token<CSS.Property.JustifyItems>\n  /**\n   * The CSS `justify-content` property.\n   *\n   * It defines how the browser distributes space between and around content items\n   * along the main-axis of a flex container, and the inline axis of a grid container.\n   *\n   * @see [Mozilla Docs](https://developer.mozilla.org/docs/Web/CSS/justify-content)\n   */\n  justifyContent?: Token<CSS.Property.JustifyContent>\n  /**\n   * The CSS `flex-wrap` property.\n   *\n   * It defines whether flex items are forced onto one line or\n   * can wrap onto multiple lines. If wrapping is allowed,\n   * it sets the direction that lines are stacked.\n   *\n   * @see [Mozilla Docs](https://developer.mozilla.org/docs/Web/CSS/flex-wrap)\n   */\n  flexWrap?: Token<CSS.Property.FlexWrap>\n  /**\n   * The CSS `flex-flow` property.\n   *\n   * It is a shorthand property for `flex-direction` and `flex-wrap`.\n   * It specifies the direction of a flex container, as well as its wrapping behavior.\n   *\n   * @see [Mozilla Docs](https://developer.mozilla.org/docs/Web/CSS/flex-flow)\n   */\n  flexFlow?: Token<CSS.Property.FlexFlow>\n  /**\n   * The CSS `flex-basis` property.\n   *\n   * It defines the initial main size of a flex item.\n   *\n   * @see [Mozilla Docs](https://developer.mozilla.org/docs/Web/CSS/flex-basis)\n   */\n  flexBasis?: Token<CSS.Property.FlexBasis<Length>>\n  /**\n   * The CSS `flex-direction` property.\n   *\n   * It defines how flex items are placed in the flex container\n   * defining the main axis and the direction (normal or reversed).\n   *\n   * @see [Mozilla Docs](https://developer.mozilla.org/docs/Web/CSS/flex-direction)\n   */\n  flexDirection?: Token<CSS.Property.FlexDirection>\n  /**\n   * The CSS `flex-direction` property.\n   *\n   * It defines how flex items are placed in the flex container\n   * defining the main axis and the direction (normal or reversed).\n   *\n   * @see [Mozilla Docs](https://developer.mozilla.org/docs/Web/CSS/flex-direction)\n   */\n  flexDir?: Token<CSS.Property.FlexDirection>\n  /**\n   * The CSS `flex` property.\n   *\n   * It defines how a flex item will grow or shrink\n   * to fit the space available in its flex container.\n   *\n   * @see [Mozilla Docs](https://developer.mozilla.org/docs/Web/CSS/flex)\n   */\n  flex?: Token<CSS.Property.Flex<Length>>\n  /**\n   * The CSS `justify-self` property.\n   *\n   * It defines the way a box is justified inside its\n   * alignment container along the appropriate axis.\n   *\n   * @see [Mozilla Docs](https://developer.mozilla.org/docs/Web/CSS/flex-flow)\n   */\n  justifySelf?: Token<CSS.Property.JustifySelf>\n  /**\n   * The CSS `align-self` property.\n   *\n   * It works like `align-items`, but applies only to a\n   * single flexbox item, instead of all of them.\n   *\n   * @see [Mozilla Docs](https://developer.mozilla.org/docs/Web/CSS/align-self)\n   */\n  alignSelf?: Token<CSS.Property.AlignSelf>\n  /**\n   * The CSS `order` property.\n   *\n   * It defines the order to lay out an item in a flex or grid container.\n   *\n   * @see [Mozilla Docs](https://developer.mozilla.org/docs/Web/CSS/order)\n   */\n  order?: Token<CSS.Property.Order>\n  /**\n   * The CSS `flex-grow` property.\n   *\n   * It defines how much a flexbox item should grow\n   * if there's space available.\n   *\n   * @see [Mozilla Docs](https://developer.mozilla.org/docs/Web/CSS/flex-grow)\n   */\n  flexGrow?: Token<CSS.Property.FlexGrow | (string & number)>\n  /**\n   * The CSS `flex-shrink` property.\n   *\n   * It defines how much a flexbox item should shrink\n   * if there's not enough space available.\n   *\n   * @see [Mozilla Docs](https://developer.mozilla.org/docs/Web/CSS/flex-shrink)\n   */\n  flexShrink?: Token<CSS.Property.FlexShrink | (string & number)>\n  /**\n   * The CSS `place-items` property.\n   *\n   * It allows you to align items along both the block and\n   * inline directions at once (i.e. the align-items and justify-items properties)\n   * in a relevant layout system such as `Grid` or `Flex`.\n   *\n   * @see [Mozilla Docs](https://developer.mozilla.org/docs/Web/CSS/place-items)\n   */\n  placeItems?: Token<CSS.Property.PlaceItems>\n  /**\n   * The CSS `place-content` property.\n   *\n   * It allows you to align content along both the block and\n   * inline directions at once (i.e. the align-content and justify-content properties)\n   * in a relevant layout system such as Grid or Flexbox.\n   *\n   * @see [Mozilla Docs](https://developer.mozilla.org/docs/Web/CSS/place-content)\n   */\n  placeContent?: Token<CSS.Property.PlaceContent>\n  /**\n   * The CSS `place-self` property.\n   *\n   * It allows you to align an individual item in both the block and\n   * inline directions at once (i.e. the align-self and justify-self properties)\n   * in a relevant layout system such as Grid or Flexbox.\n   *\n   * @see [Mozilla Docs](https://developer.mozilla.org/docs/Web/CSS/place-self)\n   */\n  placeSelf?: Token<CSS.Property.PlaceSelf>\n}\n\nexport const flexbox = system(config)\nexport const flexboxParser = createParser(config)\n"],"file":"flexbox.js"}