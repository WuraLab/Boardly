{"version":3,"sources":["../../../src/config/border.ts"],"names":["createParser","system","t","config","border","borders","borderWidth","borderWidths","borderStyle","borderStyles","borderColor","colors","borderRadius","radii","borderTop","borderBlockStart","borderTopLeftRadius","borderStartStartRadius","logical","scale","property","ltr","rtl","borderEndStartRadius","borderTopRightRadius","borderStartEndRadius","borderEndEndRadius","borderRight","borderInlineEnd","borderBottom","borderBlockEnd","borderBottomLeftRadius","borderBottomRightRadius","borderLeft","borderInlineStart","borderInlineStartRadius","borderInlineEndRadius","borderX","borderInline","borderY","borderBlock","borderTopWidth","borderBlockStartWidth","borderTopColor","borderBlockStartColor","borderTopStyle","borderBlockStartStyle","borderBottomWidth","borderBlockEndWidth","borderBottomColor","borderBlockEndColor","borderBottomStyle","borderBlockEndStyle","borderLeftWidth","borderInlineStartWidth","borderLeftColor","borderInlineStartColor","borderLeftStyle","borderInlineStartStyle","borderRightWidth","borderInlineEndWidth","borderRightColor","borderInlineEndColor","borderRightStyle","borderInlineEndStyle","borderTopRadius","borderBottomRadius","borderLeftRadius","borderRightRadius","Object","assign","rounded","roundedTop","roundedTopLeft","roundedTopRight","roundedTopStart","roundedTopEnd","roundedBottom","roundedBottomLeft","roundedBottomRight","roundedBottomStart","roundedBottomEnd","roundedLeft","roundedRight","roundedStart","roundedEnd","borderStart","borderEnd","borderTopStartRadius","borderTopEndRadius","borderBottomStartRadius","borderBottomEndRadius","borderStartRadius","borderEndRadius","borderStartWidth","borderEndWidth","borderStartColor","borderEndColor","borderStartStyle","borderEndStyle","borderParser"],"mappings":"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","sourcesContent":["import * as CSS from \"csstype\"\nimport { Config, createParser, system } from \"../core\"\nimport { t, Token } from \"../utils\"\n\nconst config: Config = {\n  border: t.borders(\"border\"),\n  borderWidth: t.borderWidths(\"borderWidth\"),\n  borderStyle: t.borderStyles(\"borderStyle\"),\n  borderColor: t.colors(\"borderColor\"),\n  borderRadius: t.radii(\"borderRadius\"),\n  borderTop: t.borders(\"borderTop\"),\n  borderBlockStart: t.borders(\"borderBlockStart\"),\n  borderTopLeftRadius: t.radii(\"borderTopLeftRadius\"),\n  borderStartStartRadius: t.logical({\n    scale: \"radii\",\n    property: {\n      ltr: \"borderTopLeftRadius\",\n      rtl: \"borderTopRightRadius\",\n    },\n  }),\n  borderEndStartRadius: t.logical({\n    scale: \"radii\",\n    property: {\n      ltr: \"borderBottomLeftRadius\",\n      rtl: \"borderBottomRightRadius\",\n    },\n  }),\n  borderTopRightRadius: t.radii(\"borderTopRightRadius\"),\n  borderStartEndRadius: t.logical({\n    scale: \"radii\",\n    property: {\n      ltr: \"borderTopRightRadius\",\n      rtl: \"borderTopLeftRadius\",\n    },\n  }),\n  borderEndEndRadius: t.logical({\n    scale: \"radii\",\n    property: {\n      ltr: \"borderBottomRightRadius\",\n      rtl: \"borderBottomLeftRadius\",\n    },\n  }),\n  borderRight: t.borders(\"borderRight\"),\n  borderInlineEnd: t.borders(\"borderInlineEnd\"),\n  borderBottom: t.borders(\"borderBottom\"),\n  borderBlockEnd: t.borders(\"borderBlockEnd\"),\n  borderBottomLeftRadius: t.radii(\"borderBottomLeftRadius\"),\n  borderBottomRightRadius: t.radii(\"borderBottomRightRadius\"),\n  borderLeft: t.borders(\"borderLeft\"),\n  borderInlineStart: {\n    property: \"borderInlineStart\",\n    scale: \"borders\",\n  },\n  borderInlineStartRadius: t.logical({\n    scale: \"radii\",\n    property: {\n      ltr: [\"borderTopLeftRadius\", \"borderBottomLeftRadius\"],\n      rtl: [\"borderTopRightRadius\", \"borderBottomRightRadius\"],\n    },\n  }),\n  borderInlineEndRadius: t.logical({\n    scale: \"radii\",\n    property: {\n      ltr: [\"borderTopRightRadius\", \"borderBottomRightRadius\"],\n      rtl: [\"borderTopLeftRadius\", \"borderBottomLeftRadius\"],\n    },\n  }),\n  borderX: t.borders([\"borderLeft\", \"borderRight\"]),\n  borderInline: t.borders(\"borderInline\"),\n  borderY: t.borders([\"borderTop\", \"borderBottom\"]),\n  borderBlock: t.borders(\"borderBlock\"),\n  borderTopWidth: t.borderWidths(\"borderTopWidth\"),\n  borderBlockStartWidth: t.borderWidths(\"borderBlockStartWidth\"),\n  borderTopColor: t.colors(\"borderTopColor\"),\n  borderBlockStartColor: t.colors(\"borderBlockStartColor\"),\n  borderTopStyle: t.borderStyles(\"borderTopStyle\"),\n  borderBlockStartStyle: t.borderStyles(\"borderBlockStartStyle\"),\n  borderBottomWidth: t.borderWidths(\"borderBottomWidth\"),\n  borderBlockEndWidth: t.borderWidths(\"borderBlockEndWidth\"),\n  borderBottomColor: t.colors(\"borderBottomColor\"),\n  borderBlockEndColor: t.colors(\"borderBlockEndColor\"),\n  borderBottomStyle: t.borderStyles(\"borderBottomStyle\"),\n  borderBlockEndStyle: t.borderStyles(\"borderBlockEndStyle\"),\n  borderLeftWidth: t.borderWidths(\"borderLeftWidth\"),\n  borderInlineStartWidth: t.borderWidths(\"borderInlineStartWidth\"),\n  borderLeftColor: t.colors(\"borderLeftColor\"),\n  borderInlineStartColor: t.colors(\"borderInlineStartColor\"),\n  borderLeftStyle: t.borderStyles(\"borderLeftStyle\"),\n  borderInlineStartStyle: t.borderStyles(\"borderInlineStartStyle\"),\n  borderRightWidth: t.borderWidths(\"borderRightWidth\"),\n  borderInlineEndWidth: t.borderWidths(\"borderInlineEndWidth\"),\n  borderRightColor: t.colors(\"borderRightColor\"),\n  borderInlineEndColor: t.colors(\"borderInlineEndColor\"),\n  borderRightStyle: t.borderStyles(\"borderRightStyle\"),\n  borderInlineEndStyle: t.borderStyles(\"borderInlineEndStyle\"),\n  borderTopRadius: t.radii([\"borderTopLeftRadius\", \"borderTopRightRadius\"]),\n  borderBottomRadius: t.radii([\n    \"borderBottomLeftRadius\",\n    \"borderBottomRightRadius\",\n  ]),\n  borderLeftRadius: t.radii([\"borderTopLeftRadius\", \"borderBottomLeftRadius\"]),\n  borderRightRadius: t.radii([\n    \"borderTopRightRadius\",\n    \"borderBottomRightRadius\",\n  ]),\n}\n\nObject.assign(config, {\n  rounded: config.borderRadius,\n  roundedTop: config.borderTopRadius,\n  roundedTopLeft: config.borderTopLeftRadius,\n  roundedTopRight: config.borderTopRightRadius,\n  roundedTopStart: config.borderStartStartRadius,\n  roundedTopEnd: config.borderStartEndRadius,\n  roundedBottom: config.borderBottomRadius,\n  roundedBottomLeft: config.borderBottomLeftRadius,\n  roundedBottomRight: config.borderBottomRightRadius,\n  roundedBottomStart: config.borderEndStartRadius,\n  roundedBottomEnd: config.borderEndEndRadius,\n  roundedLeft: config.borderLeftRadius,\n  roundedRight: config.borderRightRadius,\n  roundedStart: config.borderInlineStartRadius,\n  roundedEnd: config.borderInlineEndRadius,\n  borderStart: config.borderInlineStart,\n  borderEnd: config.borderInlineEnd,\n  borderTopStartRadius: config.borderStartStartRadius,\n  borderTopEndRadius: config.borderStartEndRadius,\n  borderBottomStartRadius: config.borderEndStartRadius,\n  borderBottomEndRadius: config.borderEndEndRadius,\n  borderStartRadius: config.borderInlineStartRadius,\n  borderEndRadius: config.borderInlineEndRadius,\n  borderStartWidth: config.borderInlineStartWidth,\n  borderEndWidth: config.borderInlineEndWidth,\n  borderStartColor: config.borderInlineStartColor,\n  borderEndColor: config.borderInlineEndColor,\n  borderStartStyle: config.borderInlineStartStyle,\n  borderEndStyle: config.borderInlineEndStyle,\n})\n\n/**\n * The prop types for border properties listed above\n */\nexport interface BorderProps {\n  /**\n   * The CSS `border` property\n   */\n  border?: Token<CSS.Property.Border | number, \"borders\">\n  /**\n   * The CSS `border-width` property\n   */\n  borderWidth?: Token<CSS.Property.BorderWidth | number>\n  /**\n   * The CSS `border-style` property\n   */\n  borderStyle?: Token<CSS.Property.BorderStyle>\n  /**\n   * The CSS `border-color` property\n   */\n  borderColor?: Token<CSS.Property.BorderTopColor, \"colors\">\n  /**\n   * The CSS `border-radius` property\n   */\n  borderRadius?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  /**\n   * The CSS `border-radius` property\n   */\n  rounded?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  /**\n   * The CSS `border-top` property\n   */\n  borderTop?: Token<CSS.Property.BorderTop | number, \"borders\">\n  borderBlockStart?: Token<CSS.Property.BorderBlockStart | number>\n  /**\n   * The CSS `border-top-width` property\n   */\n  borderTopWidth?: Token<CSS.Property.BorderWidth | number>\n  borderBlockStartWidth?: Token<CSS.Property.BorderBlockStartWidth | number>\n  /**\n   * The CSS `border-bottom-width` property\n   */\n  borderBottomWidth?: Token<CSS.Property.BorderWidth | number>\n  borderBlockEndWidth?: Token<CSS.Property.BorderBlockEndWidth | number>\n  /**\n   * The CSS `border-left-width` property\n   */\n  borderLeftWidth?: Token<CSS.Property.BorderWidth | number>\n  borderStartWidth?: Token<CSS.Property.BorderWidth | number>\n  borderInlineStartWidth?: Token<CSS.Property.BorderInlineStartWidth | number>\n  /**\n   * The CSS `border-right-width` property\n   */\n  borderRightWidth?: Token<CSS.Property.BorderWidth | number>\n  borderEndWidth?: Token<CSS.Property.BorderWidth | number>\n  borderInlineEndWidth?: Token<CSS.Property.BorderInlineEndWidth | number>\n  /**\n   * The CSS `border-top-style` property\n   */\n  borderTopStyle?: Token<CSS.Property.BorderTopStyle>\n  borderBlockStartStyle?: Token<CSS.Property.BorderBlockStartStyle>\n  /**\n   * The CSS `border-bottom-style` property\n   */\n  borderBottomStyle?: Token<CSS.Property.BorderBottomStyle>\n  borderBlockEndStyle?: Token<CSS.Property.BorderBlockEndStyle>\n  /**\n   * The CSS `border-left-style` property\n   */\n  borderLeftStyle?: Token<CSS.Property.BorderLeftStyle>\n  borderStartStyle?: Token<CSS.Property.BorderInlineStartStyle>\n  borderInlineStartStyle?: Token<CSS.Property.BorderInlineStartStyle>\n  /**\n   * The CSS `border-right-styles` property\n   */\n  borderRightStyle?: Token<CSS.Property.BorderRightStyle>\n  borderEndStyle?: Token<CSS.Property.BorderInlineEndStyle>\n  borderInlineEndStyle?: Token<CSS.Property.BorderInlineEndStyle>\n  /**\n   * The CSS `border-top-color` property\n   */\n  borderTopColor?: Token<CSS.Property.BorderTopColor, \"colors\">\n  borderBlockStartColor?: Token<CSS.Property.BorderBlockStartColor, \"colors\">\n  /**\n   * The CSS `border-bottom-color` property\n   */\n  borderBottomColor?: Token<CSS.Property.BorderBottomColor, \"colors\">\n  borderBlockEndColor?: Token<CSS.Property.BorderBlockEndColor, \"colors\">\n  /**\n   * The CSS `border-left-color` property\n   */\n  borderLeftColor?: Token<CSS.Property.BorderLeftColor, \"colors\">\n  borderStartColor?: Token<CSS.Property.BorderInlineStartColor>\n  borderInlineStartColor?: Token<CSS.Property.BorderInlineStartColor, \"colors\">\n  /**\n   * The CSS `border-right-color` property\n   */\n  borderRightColor?: Token<CSS.Property.BorderRightColor, \"colors\">\n  borderEndColor?: Token<CSS.Property.BorderInlineEndColor>\n  borderInlineEndColor?: Token<CSS.Property.BorderInlineEndColor, \"colors\">\n  /**\n   * The CSS `border-right` property\n   */\n  borderRight?: Token<CSS.Property.BorderRight | number, \"borders\">\n\n  borderEnd?: Token<CSS.Property.BorderInlineStart | number>\n  borderInlineEnd?: Token<CSS.Property.BorderInlineEnd | number>\n  /**\n   * The CSS `border-bottom` property\n   */\n  borderBottom?: Token<CSS.Property.BorderBottom | number, \"borders\">\n\n  borderBlockEnd?: Token<CSS.Property.BorderBlockEnd | number>\n  /**\n   * The CSS `border-left` property\n   */\n  borderLeft?: Token<CSS.Property.BorderLeft | number, \"borders\">\n  borderStart?: Token<CSS.Property.BorderInlineStart | number>\n  borderInlineStart?: Token<CSS.Property.BorderInlineStart | number>\n  /**\n   * The CSS `border-top-radius` property\n   */\n  borderTopRadius?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  /**\n   * The CSS `border-top-radius` property\n   */\n  roundedTop?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  /**\n   * The CSS `border-right-radius` property\n   */\n  borderRightRadius?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  /**\n   * The CSS `border-right-radius` property\n   */\n  roundedRight?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  /**\n   * When direction is `ltr`, `roundedEnd` is equivalent to `borderRightRadius`.\n   * When direction is `rtl`, `roundedEnd` is equivalent to `borderLeftRadius`.\n   */\n  roundedEnd?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  /**\n   * When direction is `ltr`, `borderInlineEndRadius` is equivalent to `borderRightRadius`.\n   * When direction is `rtl`, `borderInlineEndRadius` is equivalent to `borderLeftRadius`.\n   */\n  borderInlineEndRadius?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  /**\n   * When direction is `ltr`, `borderEndRadius` is equivalent to `borderRightRadius`.\n   * When direction is `rtl`, `borderEndRadius` is equivalent to `borderLeftRadius`.\n   */\n  borderEndRadius?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  /**\n   * The CSS `border-bottom-radius` property\n   */\n  borderBottomRadius?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  /**\n   * The CSS `border-bottom-radius` property\n   */\n  roundedBottom?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  /**\n   * The CSS `border-left-radius` property\n   */\n  borderLeftRadius?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  /**\n   * The CSS `border-left-radius` property\n   */\n  roundedLeft?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  /**\n   * When direction is `ltr`, `roundedEnd` is equivalent to `borderRightRadius`.\n   * When direction is `rtl`, `roundedEnd` is equivalent to `borderLeftRadius`.\n   */\n  roundedStart?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  /**\n   * When direction is `ltr`, `borderInlineStartRadius` is equivalent to `borderLeftRadius`.\n   * When direction is `rtl`, `borderInlineStartRadius` is equivalent to `borderRightRadius`.\n   */\n  borderInlineStartRadius?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  /**\n   * When direction is `ltr`, `borderStartRadius` is equivalent to `borderLeftRadius`.\n   * When direction is `rtl`, `borderStartRadius` is equivalent to `borderRightRadius`.\n   */\n  borderStartRadius?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  /**\n   * The CSS `border-top-left-radius` property\n   */\n  borderTopLeftRadius?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  borderTopStartRadius?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  borderStartStartRadius?: Token<\n    CSS.Property.BorderStartStartRadius | number,\n    \"radii\"\n  >\n  /**\n   * The CSS `border-top-left-radius` property\n   */\n  roundedTopLeft?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  roundedTopStart?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  /**\n   * The CSS `border-top-right-radius` property\n   */\n  borderTopRightRadius?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  borderTopEndRadius?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  borderStartEndRadius?: Token<\n    CSS.Property.BorderStartEndRadius | number,\n    \"radii\"\n  >\n  /**\n   * The CSS `border-top-right-radius` property\n   */\n  roundedTopRight?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  roundedTopEnd?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  /**\n   * The CSS `border-bottom-left-radius` property\n   */\n  borderBottomLeftRadius?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  borderBottomStartRadius?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  borderEndStartRadius?: Token<\n    CSS.Property.BorderEndStartRadius | number,\n    \"radii\"\n  >\n  /**\n   * The CSS `border-bottom-left-radius` property\n   */\n  roundedBottomLeft?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  roundedBottomStart?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  /**\n   * The CSS `border-bottom-right-radius` property\n   */\n  borderBottomRightRadius?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  borderBottomEndRadius?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  borderEndEndRadius?: Token<CSS.Property.BorderEndEndRadius | number, \"radii\">\n  /**\n   * The CSS `border-bottom-right-radius` property\n   */\n  roundedBottomRight?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  roundedBottomEnd?: Token<CSS.Property.BorderRadius | number, \"radii\">\n  /**\n   * The CSS `border-right` and `border-left` property\n   */\n  borderX?: Token<CSS.Property.Border | number, \"borders\">\n  borderInline?: Token<CSS.Property.BorderInline | number>\n  /**\n   * The CSS `border-top` and `border-bottom` property\n   */\n  borderY?: Token<CSS.Property.Border | number, \"borders\">\n  borderBlock?: Token<CSS.Property.BorderBlock | number>\n}\n\nexport const border = system(config)\nexport const borderParser = createParser(config)\n"],"file":"border.js"}