{"version":3,"sources":["../../src/use-popover.ts"],"names":["useBoolean","useDisclosure","useFocusOnHide","useFocusOnShow","useIds","useOutsideClick","usePopper","useColorModeValue","useToken","callAllHandlers","mergeRefs","mergeWith","useCallback","useEffect","useRef","TRIGGER","click","hover","usePopover","props","closeOnBlur","closeOnEsc","initialFocusRef","placement","placementProp","flip","gutter","id","arrowSize","returnFocusOnClose","autoFocus","arrowShadowColor","modifiers","trigger","openDelay","closeDelay","isLazy","isOpen","onClose","onOpen","onToggle","triggerRef","popoverRef","isHoveringRef","hasHeader","setHasHeader","hasBody","setHasBody","triggerId","popoverId","headerId","bodyId","fallbackShadowColor","shadowColor","arrowColor","popper","enabled","focusRef","visible","shouldFocus","ref","handler","event","current","contains","target","getPopoverProps","_ref","popoverProps","style","transformOrigin","children","tabIndex","role","onKeyDown","key","onBlur","element","relatedTarget","document","activeElement","undefined","onMouseEnter","onMouseLeave","setTimeout","getPopoverPositionerProps","getPopperProps","visibility","openTimeout","closeTimeout","getTriggerProps","triggerProps","onClick","onFocus","window","clearTimeout","getReferenceProps","getArrowProps","getArrowWrapperProps","onTransitionEnd","dispatchEvent","Event","forceUpdate","getArrowPositionerProps"],"mappings":"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","sourcesContent":["import {\n  useBoolean,\n  useDisclosure,\n  useFocusOnHide,\n  useFocusOnShow,\n  useIds,\n  useOutsideClick,\n} from \"@chakra-ui/hooks\"\nimport { Placement, usePopper, UsePopperProps } from \"@chakra-ui/popper\"\nimport { useColorModeValue, useToken } from \"@chakra-ui/system\"\nimport {\n  callAllHandlers,\n  FocusableElement,\n  HTMLProps,\n  mergeRefs,\n  mergeWith,\n  PropGetter,\n} from \"@chakra-ui/utils\"\nimport { RefObject, useCallback, useEffect, useRef } from \"react\"\n\nconst TRIGGER = {\n  click: \"click\",\n  hover: \"hover\",\n} as const\n\nexport interface UsePopoverProps {\n  /**\n   * The html `id` attribute of the popover.\n   * If not provided, we generate a unique id.\n   *\n   * This `id` is also used to auto-generate the `aria-labelledby`\n   * and `aria-decribedby` attributes that points to the `PopoverHeader` and `PopoverBody`\n   */\n  id?: string\n  /**\n   * If `true`, the popover will be opened in controlled mode.\n   */\n  isOpen?: boolean\n  /**\n   * If `true`, the popover will be initially opened.\n   */\n  defaultIsOpen?: boolean\n  /**\n   * The `ref` of the element that should receive focus when the popover opens.\n   */\n  initialFocusRef?: RefObject<FocusableElement>\n  /**\n   * If `true`, focus will be returned to the element that triggers the popover\n   * when it closes\n   */\n  returnFocusOnClose?: boolean\n  /**\n   * If `true`, focus will be transferred to the first interactive element\n   * when the popover opens\n   */\n  autoFocus?: boolean\n  /**\n   * The gap (in pixels) to apply between the popover and the target.\n   * Used by `popper.js`\n   */\n  gutter?: number\n  /**\n   * The placement of the popover\n   */\n  placement?: Placement\n  /**\n   * The flip of the popover\n   */\n  flip?: boolean\n  /**\n   * If `true`, the popover will close when you blur out it by\n   * clicking outside or tabbing out\n   */\n  closeOnBlur?: boolean\n  /**\n   * If `true`, the popover will close when you hit the `Esc` key\n   */\n  closeOnEsc?: boolean\n  /**\n   * Callback fired when the popover opens\n   */\n  onOpen?: () => void\n  /**\n   * Callback fired when the popover closes\n   */\n  onClose?: () => void\n  /**\n   * The size of the popover arrow\n   */\n  arrowSize?: number\n  /**\n   * The `box-shadow` of the popover arrow\n   */\n  arrowShadowColor?: string\n  /**\n   * The Popper.js modifiers to use.\n   */\n  modifiers?: UsePopperProps[\"modifiers\"]\n  /**\n   * The interaction that triggers the popover.\n   *\n   * `hover` - means the popover will open when you hover with mouse or\n   * focus with keyboard on the popover trigger\n   *\n   * `click` - means the popover will open on click or\n   * press `Enter` to `Space` on keyboard\n   */\n  trigger?: keyof typeof TRIGGER\n  openDelay?: number\n  closeDelay?: number\n  /**\n   * Performance 🚀:\n   * If `true`, the PopoverContent rendering will be deferred\n   * until the popover is open.\n   */\n  isLazy?: boolean\n}\n\nexport function usePopover(props: UsePopoverProps = {}) {\n  const {\n    closeOnBlur = true,\n    closeOnEsc = true,\n    initialFocusRef,\n    placement: placementProp,\n    flip,\n    gutter,\n    id,\n    arrowSize,\n    returnFocusOnClose = true,\n    autoFocus = true,\n    arrowShadowColor,\n    modifiers,\n    trigger = TRIGGER.click,\n    openDelay = 200,\n    closeDelay = 200,\n    isLazy,\n  } = props\n\n  const { isOpen, onClose, onOpen, onToggle } = useDisclosure(props)\n\n  const triggerRef = useRef<HTMLElement>(null)\n  const popoverRef = useRef<HTMLElement>(null)\n\n  const isHoveringRef = useRef(false)\n\n  const [hasHeader, setHasHeader] = useBoolean()\n  const [hasBody, setHasBody] = useBoolean()\n\n  const [triggerId, popoverId, headerId, bodyId] = useIds(\n    id,\n    \"popover-trigger\",\n    \"popover-content\",\n    \"popover-header\",\n    \"popover-body\",\n  )\n\n  const fallbackShadowColor = useColorModeValue(\"gray.200\", \"whiteAlpha.300\")\n  const shadowColor = arrowShadowColor ?? fallbackShadowColor\n  const arrowColor = useToken(\"colors\", shadowColor, arrowShadowColor)\n\n  const popper = usePopper({\n    enabled: isOpen,\n    placement: placementProp,\n    flip,\n    gutter,\n    arrowSize,\n    arrowShadowColor: arrowColor,\n    modifiers,\n  })\n\n  useFocusOnHide(popoverRef, {\n    focusRef: triggerRef,\n    visible: isOpen,\n    shouldFocus: returnFocusOnClose && trigger === TRIGGER.click,\n  })\n\n  useFocusOnShow(popoverRef, {\n    visible: isOpen,\n    focusRef: initialFocusRef,\n    shouldFocus: autoFocus && trigger === TRIGGER.click,\n  })\n\n  useOutsideClick({\n    ref: popoverRef,\n    handler: (event) => {\n      if (\n        isOpen &&\n        trigger === TRIGGER.click &&\n        closeOnBlur &&\n        !triggerRef.current?.contains(event.target as HTMLElement)\n      ) {\n        onClose()\n      }\n    },\n  })\n\n  const getPopoverProps: PropGetter = useCallback(\n    (props = {}, _ref = null) => {\n      const popoverProps: HTMLProps = {\n        ...props,\n        style: { ...props.style, transformOrigin: popper.transformOrigin },\n        ref: mergeRefs(popoverRef, _ref),\n        children: !isLazy || isOpen ? props.children : null,\n        id: popoverId,\n        tabIndex: -1,\n        role: \"dialog\",\n        onKeyDown: callAllHandlers(props.onKeyDown, (event) => {\n          if (closeOnEsc && event.key === \"Escape\") {\n            onClose()\n          }\n        }),\n        onBlur: callAllHandlers(props.onBlur, (event) => {\n          const element = (event.relatedTarget ??\n            document.activeElement) as HTMLElement\n\n          if (\n            isOpen &&\n            closeOnBlur &&\n            !popoverRef.current?.contains(element) &&\n            !triggerRef.current?.contains(element)\n          ) {\n            onClose()\n          }\n        }),\n        \"aria-labelledby\": hasHeader ? headerId : undefined,\n        \"aria-describedby\": hasBody ? bodyId : undefined,\n      }\n\n      if (trigger === TRIGGER.hover) {\n        popoverProps.role = \"tooltip\"\n        popoverProps.onMouseEnter = callAllHandlers(props.onMouseEnter, () => {\n          isHoveringRef.current = true\n        })\n        popoverProps.onMouseLeave = callAllHandlers(props.onMouseLeave, () => {\n          isHoveringRef.current = false\n          setTimeout(onClose, closeDelay)\n        })\n      }\n\n      return popoverProps\n    },\n    [\n      isLazy,\n      isOpen,\n      popoverId,\n      hasHeader,\n      headerId,\n      hasBody,\n      bodyId,\n      trigger,\n      popper,\n      closeOnEsc,\n      onClose,\n      closeDelay,\n      closeOnBlur,\n    ],\n  )\n\n  const getPopoverPositionerProps: PropGetter = (props = {}, _ref = null) =>\n    getPopperProps(\n      mergeWith(props, {\n        style: { visibility: isOpen ? \"visible\" : \"hidden\" },\n      }),\n      _ref,\n    )\n\n  const openTimeout = useRef<number>()\n  const closeTimeout = useRef<number>()\n\n  const getTriggerProps: PropGetter = useCallback(\n    (props = {}, _ref = null) => {\n      const triggerProps: HTMLProps = {\n        ...props,\n        id: triggerId,\n        \"aria-haspopup\": \"dialog\",\n        \"aria-expanded\": isOpen,\n        \"aria-controls\": popoverId,\n      }\n\n      if (trigger === TRIGGER.click) {\n        triggerProps.onClick = callAllHandlers(props.onClick, onToggle)\n      }\n\n      if (trigger === TRIGGER.hover) {\n        /**\n         * Any content that shows on pointer hover should also show on keyboard focus.\n         * Consider focus and blur to be the `hover` for keyboard users.\n         *\n         * @see https://www.w3.org/WAI/WCAG21/Understanding/content-on-hover-or-focus.html\n         */\n        triggerProps.onFocus = callAllHandlers(props.onFocus, onOpen)\n        triggerProps.onBlur = callAllHandlers(props.onBlur, onClose)\n\n        /**\n         * Any content that shows on hover or focus must be dismissible.\n         * This case pressing `Escape` will dismiss the popover\n         */\n        triggerProps.onKeyDown = callAllHandlers(props.onKeyDown, (event) => {\n          if (event.key === \"Escape\") {\n            onClose()\n          }\n        })\n\n        triggerProps.onMouseEnter = callAllHandlers(props.onMouseEnter, () => {\n          isHoveringRef.current = true\n          openTimeout.current = window.setTimeout(onOpen, openDelay)\n        })\n\n        triggerProps.onMouseLeave = callAllHandlers(props.onMouseLeave, () => {\n          isHoveringRef.current = false\n\n          if (openTimeout.current) {\n            clearTimeout(openTimeout.current)\n            openTimeout.current = undefined\n          }\n\n          closeTimeout.current = window.setTimeout(() => {\n            if (isHoveringRef.current === false) {\n              onClose()\n            }\n          }, closeDelay)\n        })\n      }\n\n      return popper.getReferenceProps(triggerProps, mergeRefs(triggerRef, _ref))\n    },\n    [\n      triggerId,\n      isOpen,\n      popoverId,\n      trigger,\n      popper,\n      onToggle,\n      onOpen,\n      onClose,\n      openDelay,\n      closeDelay,\n    ],\n  )\n\n  useEffect(\n    () => () => {\n      if (openTimeout.current) clearTimeout(openTimeout.current)\n      if (closeTimeout.current) clearTimeout(closeTimeout.current)\n    },\n    [],\n  )\n\n  const { getArrowProps, getArrowWrapperProps, getPopperProps } = popper\n\n  const onTransitionEnd = () => {\n    popoverRef.current?.dispatchEvent(new Event(\"transitionend\"))\n  }\n\n  return {\n    forceUpdate: popper.forceUpdate,\n    isOpen,\n    onClose,\n    headerId,\n    hasHeader,\n    setHasHeader,\n    bodyId,\n    hasBody,\n    setHasBody,\n    onTransitionEnd,\n    getArrowProps,\n    getArrowPositionerProps: getArrowWrapperProps,\n    getPopoverPositionerProps,\n    getPopoverProps,\n    getTriggerProps,\n  }\n}\n\nexport type UsePopoverReturn = ReturnType<typeof usePopover>\n"],"file":"use-popover.js"}