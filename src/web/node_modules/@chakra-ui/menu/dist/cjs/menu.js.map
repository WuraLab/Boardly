{"version":3,"sources":["../../src/menu.tsx"],"names":["Menu","props","children","styles","ownProps","ctx","context","React","useMemo","isOpen","onClose","forceUpdate","__DEV__","displayName","StyledMenuButton","ref","display","appearance","alignItems","outline","transition","button","MenuButton","As","as","rest","buttonProps","Element","className","pointerEvents","flex","motionVariants","enter","visibility","opacity","scale","duration","ease","exit","transitionEnd","easings","Motion","motion","div","MenuList","rootProps","onTransitionEnd","listProps","positionerProps","zIndex","list","StyledMenuItem","type","btnType","undefined","buttonStyles","textDecoration","color","userSelect","width","textAlign","item","MenuItem","icon","iconSpacing","command","commandSpacing","menuItemProps","shouldWrap","_children","CheckIcon","MenuItemOption","optionProps","isChecked","id","MenuOptionGroup","title","MenuGroup","_className","groupTitle","MenuCommand","MenuIcon","child","Children","only","clone","isValidElement","cloneElement","focusable","flexShrink","MenuDivider","divider"],"mappings":"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","sourcesContent":["import {\n  chakra,\n  forwardRef,\n  HTMLChakraProps,\n  omitThemingProps,\n  PropsOf,\n  StylesProvider,\n  SystemProps,\n  SystemStyleObject,\n  ThemingProps,\n  useMultiStyleConfig,\n  useStyles,\n} from \"@chakra-ui/system\"\nimport { cx, MaybeRenderProp, runIfFn, __DEV__ } from \"@chakra-ui/utils\"\nimport { motion, Variants } from \"framer-motion\"\nimport * as React from \"react\"\nimport {\n  MenuProvider,\n  useMenu,\n  useMenuButton,\n  useMenuContext,\n  useMenuItem,\n  UseMenuItemProps,\n  useMenuList,\n  useMenuOption,\n  useMenuOptionGroup,\n  UseMenuOptionGroupProps,\n  UseMenuOptionOptions,\n  useMenuPositioner,\n  UseMenuProps,\n} from \"./use-menu\"\n\nexport interface MenuProps extends UseMenuProps, ThemingProps<\"Menu\"> {\n  children: MaybeRenderProp<{\n    isOpen: boolean\n    onClose: () => void\n    forceUpdate: (() => void) | null\n  }>\n}\n\n/**\n * Menu provides context, state, and focus management\n * to its sub-components. It doesn't render any DOM node.\n */\nexport const Menu: React.FC<MenuProps> = (props) => {\n  const { children } = props\n\n  const styles = useMultiStyleConfig(\"Menu\", props)\n  const ownProps = omitThemingProps(props)\n\n  const ctx = useMenu(ownProps)\n  const context = React.useMemo(() => ctx, [ctx])\n\n  const { isOpen, onClose, forceUpdate } = context\n\n  return (\n    <MenuProvider value={context}>\n      <StylesProvider value={styles}>\n        {runIfFn(children, { isOpen, onClose, forceUpdate })}\n      </StylesProvider>\n    </MenuProvider>\n  )\n}\n\nif (__DEV__) {\n  Menu.displayName = \"Menu\"\n}\n\nexport interface MenuButtonProps extends HTMLChakraProps<\"button\"> {}\n\nconst StyledMenuButton = forwardRef<MenuButtonProps, \"button\">((props, ref) => {\n  const styles = useStyles()\n  return (\n    <chakra.button\n      ref={ref}\n      {...props}\n      __css={{\n        display: \"inline-flex\",\n        appearance: \"none\",\n        alignItems: \"center\",\n        outline: 0,\n        transition: \"all 250ms\",\n        ...styles.button,\n      }}\n    />\n  )\n})\n\n/**\n * The trigger for the menu list. Must be a direct child of `Menu`.\n */\nexport const MenuButton = forwardRef<MenuButtonProps, \"button\">(\n  (props, ref) => {\n    const { children, as: As, ...rest } = props\n\n    const buttonProps = useMenuButton(rest, ref)\n\n    const Element = As || StyledMenuButton\n\n    return (\n      <Element\n        {...buttonProps}\n        className={cx(\"chakra-menu__menu-button\", props.className)}\n      >\n        <chakra.span __css={{ pointerEvents: \"none\", flex: \"1 1 auto\" }}>\n          {props.children}\n        </chakra.span>\n      </Element>\n    )\n  },\n)\n\nif (__DEV__) {\n  MenuButton.displayName = \"MenuButton\"\n}\n\nexport interface MenuListProps extends HTMLChakraProps<\"div\"> {\n  rootProps?: HTMLChakraProps<\"div\">\n}\n\nconst motionVariants: Variants = {\n  enter: {\n    visibility: \"visible\",\n    opacity: 1,\n    scale: 1,\n    transition: {\n      duration: 0.2,\n      ease: [0.4, 0, 0.2, 1],\n    },\n  },\n  exit: {\n    transitionEnd: {\n      visibility: \"hidden\",\n    },\n    opacity: 0,\n    scale: 0.8,\n    transition: {\n      duration: 0.1,\n      easings: \"easeOut\",\n    },\n  },\n}\n\nconst Motion = chakra(motion.div)\n\nexport const MenuList = forwardRef<MenuListProps, \"div\">((props, ref) => {\n  const { rootProps, ...rest } = props\n  const { isOpen, onTransitionEnd } = useMenuContext()\n\n  const listProps = useMenuList(rest, ref)\n  const positionerProps = useMenuPositioner(rootProps)\n\n  const styles = useStyles()\n\n  return (\n    <chakra.div\n      {...positionerProps}\n      __css={{ zIndex: props.zIndex ?? styles.list?.zIndex }}\n    >\n      <Motion\n        {...listProps}\n        /**\n         * We could call this on either `onAnimationComplete` or `onUpdate`.\n         * It seems the re-focusing works better with the `onUpdate`\n         */\n        onUpdate={onTransitionEnd}\n        className={cx(\"chakra-menu__menu-list\", listProps.className)}\n        variants={motionVariants}\n        initial={false}\n        animate={isOpen ? \"enter\" : \"exit\"}\n        __css={{\n          outline: 0,\n          ...styles.list,\n        }}\n      />\n    </chakra.div>\n  )\n})\n\nif (__DEV__) {\n  MenuList.displayName = \"MenuList\"\n}\n\nexport interface StyledMenuItemProps extends HTMLChakraProps<\"button\"> {}\n\nconst StyledMenuItem = forwardRef<StyledMenuItemProps, \"button\">(\n  (props, ref) => {\n    const { type, ...rest } = props\n    const styles = useStyles()\n\n    /**\n     * Given another component, use its type if present\n     * Else, use no type to avoid invalid html, e.g. <a type=\"button\" />\n     * Else, fall back to \"button\"\n     */\n    const btnType = rest.as ? type ?? undefined : \"button\"\n\n    const buttonStyles: SystemStyleObject = {\n      textDecoration: \"none\",\n      color: \"inherit\",\n      userSelect: \"none\",\n      display: \"flex\",\n      width: \"100%\",\n      alignItems: \"center\",\n      textAlign: \"left\",\n      flex: \"0 0 auto\",\n      outline: 0,\n      ...styles.item,\n    }\n\n    return (\n      <chakra.button ref={ref} type={btnType} {...rest} __css={buttonStyles} />\n    )\n  },\n)\n\ninterface MenuItemOptions\n  extends Pick<UseMenuItemProps, \"isDisabled\" | \"isFocusable\"> {\n  /**\n   * The icon to render before the menu item's label.\n   * @type React.ReactElement\n   */\n  icon?: React.ReactElement\n  /**\n   * The spacing between the icon and menu item's label.\n   * @type SystemProps[\"mr\"]\n   */\n  iconSpacing?: SystemProps[\"mr\"]\n  /**\n   * Right-aligned label text content, useful for displaying hotkeys.\n   */\n  command?: string\n  /**\n   * The spacing between the command and menu item's label.\n   * @type SystemProps[\"ml\"]\n   */\n  commandSpacing?: SystemProps[\"ml\"]\n}\n\nexport interface MenuItemProps\n  extends HTMLChakraProps<\"button\">,\n    MenuItemOptions {}\n\nexport const MenuItem = forwardRef<MenuItemProps, \"button\">((props, ref) => {\n  const {\n    icon,\n    iconSpacing = \"0.75rem\",\n    command,\n    commandSpacing = \"0.75rem\",\n    children,\n    ...rest\n  } = props\n\n  const menuItemProps = useMenuItem(rest, ref) as MenuItemProps\n\n  const shouldWrap = icon || command\n\n  const _children = shouldWrap ? (\n    <chakra.span pointerEvents=\"none\" flex=\"1\">\n      {children}\n    </chakra.span>\n  ) : (\n    children\n  )\n\n  return (\n    <StyledMenuItem\n      {...menuItemProps}\n      className={cx(\"chakra-menu__menuitem\", menuItemProps.className)}\n    >\n      {icon && (\n        <MenuIcon fontSize=\"0.8em\" marginEnd={iconSpacing}>\n          {icon}\n        </MenuIcon>\n      )}\n      {_children}\n      {command && (\n        <MenuCommand marginStart={commandSpacing}>{command}</MenuCommand>\n      )}\n    </StyledMenuItem>\n  )\n})\n\nif (__DEV__) {\n  MenuItem.displayName = \"MenuItem\"\n}\n\nconst CheckIcon: React.FC<PropsOf<\"svg\">> = (props) => (\n  <svg viewBox=\"0 0 14 14\" width=\"1em\" height=\"1em\" {...props}>\n    <polygon\n      fill=\"currentColor\"\n      points=\"5.5 11.9993304 14 3.49933039 12.5 2 5.5 8.99933039 1.5 4.9968652 0 6.49933039\"\n    />\n  </svg>\n)\n\nexport interface MenuItemOptionProps\n  extends UseMenuOptionOptions,\n    Omit<MenuItemProps, keyof UseMenuOptionOptions> {\n  /**\n   * @type React.ReactElement\n   */\n  icon?: React.ReactElement\n  /**\n   * @type SystemProps[\"mr\"]\n   */\n  iconSpacing?: SystemProps[\"mr\"]\n}\n\nexport const MenuItemOption = forwardRef<MenuItemOptionProps, \"button\">(\n  (props, ref) => {\n    const { icon, iconSpacing = \"0.75rem\", ...rest } = props\n\n    const optionProps = useMenuOption(rest, ref) as StyledMenuItemProps\n\n    return (\n      <StyledMenuItem\n        {...optionProps}\n        className={cx(\"chakra-menu__menuitem-option\", rest.className)}\n      >\n        <MenuIcon\n          fontSize=\"0.8em\"\n          marginEnd={iconSpacing}\n          opacity={props.isChecked ? 1 : 0}\n        >\n          {icon || <CheckIcon />}\n        </MenuIcon>\n        <chakra.span flex=\"1\">{optionProps.children}</chakra.span>\n      </StyledMenuItem>\n    )\n  },\n)\n\nMenuItemOption.id = \"MenuItemOption\"\n\nif (__DEV__) {\n  MenuItemOption.displayName = \"MenuItemOption\"\n}\n\nexport interface MenuOptionGroupProps\n  extends UseMenuOptionGroupProps,\n    Omit<MenuGroupProps, \"value\" | \"defaultValue\" | \"onChange\"> {}\n\nexport const MenuOptionGroup: React.FC<MenuOptionGroupProps> = (props) => {\n  const { className, title, ...rest } = props\n  const ownProps = useMenuOptionGroup(rest)\n  return (\n    <MenuGroup\n      title={title}\n      className={cx(\"chakra-menu__option-group\", className)}\n      {...ownProps}\n    />\n  )\n}\n\nif (__DEV__) {\n  MenuOptionGroup.displayName = \"MenuOptionGroup\"\n}\n\nexport interface MenuGroupProps extends HTMLChakraProps<\"div\"> {}\n\nexport const MenuGroup = forwardRef<MenuGroupProps, \"div\">((props, ref) => {\n  const { title, children, className, ...rest } = props\n\n  const _className = cx(\"chakra-menu__group__title\", className)\n  const styles = useStyles()\n\n  return (\n    <chakra.div ref={ref} className=\"chakra-menu__group\" role=\"group\">\n      {title && (\n        <chakra.p className={_className} {...rest} __css={styles.groupTitle}>\n          {title}\n        </chakra.p>\n      )}\n      {children}\n    </chakra.div>\n  )\n})\n\nif (__DEV__) {\n  MenuGroup.displayName = \"MenuGroup\"\n}\n\nexport interface MenuCommandProps extends HTMLChakraProps<\"span\"> {}\n\nexport const MenuCommand = forwardRef<MenuCommandProps, \"span\">(\n  (props, ref) => {\n    const styles = useStyles()\n    return (\n      <chakra.span\n        ref={ref}\n        {...props}\n        __css={styles.command}\n        className=\"chakra-menu__command\"\n      />\n    )\n  },\n)\n\nif (__DEV__) {\n  MenuCommand.displayName = \"MenuCommand\"\n}\n\nexport const MenuIcon: React.FC<HTMLChakraProps<\"span\">> = (props) => {\n  const { className, children, ...rest } = props\n\n  const child = React.Children.only(children)\n\n  const clone = React.isValidElement(child)\n    ? React.cloneElement(child, {\n        focusable: \"false\",\n        \"aria-hidden\": true,\n        className: cx(\"chakra-menu__icon\", child.props.className),\n      })\n    : null\n\n  const _className = cx(\"chakra-menu__icon-wrapper\", className)\n\n  return (\n    <chakra.span\n      className={_className}\n      {...rest}\n      __css={{\n        flexShrink: 0,\n      }}\n    >\n      {clone}\n    </chakra.span>\n  )\n}\n\nif (__DEV__) {\n  MenuIcon.displayName = \"MenuIcon\"\n}\n\nexport interface MenuDividerProps extends HTMLChakraProps<\"hr\"> {}\n\nexport const MenuDivider: React.FC<MenuDividerProps> = (props) => {\n  const { className, ...rest } = props\n  const styles = useStyles()\n  return (\n    <chakra.hr\n      role=\"separator\"\n      aria-orientation=\"horizontal\"\n      className={cx(\"chakra-menu__divider\", className)}\n      {...rest}\n      __css={styles.divider}\n    />\n  )\n}\n\nif (__DEV__) {\n  MenuDivider.displayName = \"MenuDivider\"\n}\n"],"file":"menu.js"}