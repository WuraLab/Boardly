{"version":3,"sources":["../../src/menu.tsx"],"names":["chakra","forwardRef","omitThemingProps","StylesProvider","useMultiStyleConfig","useStyles","cx","runIfFn","__DEV__","motion","React","MenuProvider","useMenu","useMenuButton","useMenuContext","useMenuItem","useMenuList","useMenuOption","useMenuOptionGroup","useMenuPositioner","Menu","props","children","styles","ownProps","ctx","context","useMemo","isOpen","onClose","forceUpdate","displayName","StyledMenuButton","ref","display","appearance","alignItems","outline","transition","button","MenuButton","as","As","rest","buttonProps","Element","className","pointerEvents","flex","motionVariants","enter","visibility","opacity","scale","duration","ease","exit","transitionEnd","easings","Motion","div","MenuList","rootProps","onTransitionEnd","listProps","positionerProps","zIndex","list","StyledMenuItem","type","btnType","undefined","buttonStyles","textDecoration","color","userSelect","width","textAlign","item","MenuItem","icon","iconSpacing","command","commandSpacing","menuItemProps","shouldWrap","_children","CheckIcon","MenuItemOption","optionProps","isChecked","id","MenuOptionGroup","title","MenuGroup","_className","groupTitle","MenuCommand","MenuIcon","child","Children","only","clone","isValidElement","cloneElement","focusable","flexShrink","MenuDivider","divider"],"mappings":"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","sourcesContent":["import {\n  chakra,\n  forwardRef,\n  HTMLChakraProps,\n  omitThemingProps,\n  PropsOf,\n  StylesProvider,\n  SystemProps,\n  SystemStyleObject,\n  ThemingProps,\n  useMultiStyleConfig,\n  useStyles,\n} from \"@chakra-ui/system\"\nimport { cx, MaybeRenderProp, runIfFn, __DEV__ } from \"@chakra-ui/utils\"\nimport { motion, Variants } from \"framer-motion\"\nimport * as React from \"react\"\nimport {\n  MenuProvider,\n  useMenu,\n  useMenuButton,\n  useMenuContext,\n  useMenuItem,\n  UseMenuItemProps,\n  useMenuList,\n  useMenuOption,\n  useMenuOptionGroup,\n  UseMenuOptionGroupProps,\n  UseMenuOptionOptions,\n  useMenuPositioner,\n  UseMenuProps,\n} from \"./use-menu\"\n\nexport interface MenuProps extends UseMenuProps, ThemingProps<\"Menu\"> {\n  children: MaybeRenderProp<{\n    isOpen: boolean\n    onClose: () => void\n    forceUpdate: (() => void) | null\n  }>\n}\n\n/**\n * Menu provides context, state, and focus management\n * to its sub-components. It doesn't render any DOM node.\n */\nexport const Menu: React.FC<MenuProps> = (props) => {\n  const { children } = props\n\n  const styles = useMultiStyleConfig(\"Menu\", props)\n  const ownProps = omitThemingProps(props)\n\n  const ctx = useMenu(ownProps)\n  const context = React.useMemo(() => ctx, [ctx])\n\n  const { isOpen, onClose, forceUpdate } = context\n\n  return (\n    <MenuProvider value={context}>\n      <StylesProvider value={styles}>\n        {runIfFn(children, { isOpen, onClose, forceUpdate })}\n      </StylesProvider>\n    </MenuProvider>\n  )\n}\n\nif (__DEV__) {\n  Menu.displayName = \"Menu\"\n}\n\nexport interface MenuButtonProps extends HTMLChakraProps<\"button\"> {}\n\nconst StyledMenuButton = forwardRef<MenuButtonProps, \"button\">((props, ref) => {\n  const styles = useStyles()\n  return (\n    <chakra.button\n      ref={ref}\n      {...props}\n      __css={{\n        display: \"inline-flex\",\n        appearance: \"none\",\n        alignItems: \"center\",\n        outline: 0,\n        transition: \"all 250ms\",\n        ...styles.button,\n      }}\n    />\n  )\n})\n\n/**\n * The trigger for the menu list. Must be a direct child of `Menu`.\n */\nexport const MenuButton = forwardRef<MenuButtonProps, \"button\">(\n  (props, ref) => {\n    const { children, as: As, ...rest } = props\n\n    const buttonProps = useMenuButton(rest, ref)\n\n    const Element = As || StyledMenuButton\n\n    return (\n      <Element\n        {...buttonProps}\n        className={cx(\"chakra-menu__menu-button\", props.className)}\n      >\n        <chakra.span __css={{ pointerEvents: \"none\", flex: \"1 1 auto\" }}>\n          {props.children}\n        </chakra.span>\n      </Element>\n    )\n  },\n)\n\nif (__DEV__) {\n  MenuButton.displayName = \"MenuButton\"\n}\n\nexport interface MenuListProps extends HTMLChakraProps<\"div\"> {\n  rootProps?: HTMLChakraProps<\"div\">\n}\n\nconst motionVariants: Variants = {\n  enter: {\n    visibility: \"visible\",\n    opacity: 1,\n    scale: 1,\n    transition: {\n      duration: 0.2,\n      ease: [0.4, 0, 0.2, 1],\n    },\n  },\n  exit: {\n    transitionEnd: {\n      visibility: \"hidden\",\n    },\n    opacity: 0,\n    scale: 0.8,\n    transition: {\n      duration: 0.1,\n      easings: \"easeOut\",\n    },\n  },\n}\n\nconst Motion = chakra(motion.div)\n\nexport const MenuList = forwardRef<MenuListProps, \"div\">((props, ref) => {\n  const { rootProps, ...rest } = props\n  const { isOpen, onTransitionEnd } = useMenuContext()\n\n  const listProps = useMenuList(rest, ref)\n  const positionerProps = useMenuPositioner(rootProps)\n\n  const styles = useStyles()\n\n  return (\n    <chakra.div\n      {...positionerProps}\n      __css={{ zIndex: props.zIndex ?? styles.list?.zIndex }}\n    >\n      <Motion\n        {...listProps}\n        /**\n         * We could call this on either `onAnimationComplete` or `onUpdate`.\n         * It seems the re-focusing works better with the `onUpdate`\n         */\n        onUpdate={onTransitionEnd}\n        className={cx(\"chakra-menu__menu-list\", listProps.className)}\n        variants={motionVariants}\n        initial={false}\n        animate={isOpen ? \"enter\" : \"exit\"}\n        __css={{\n          outline: 0,\n          ...styles.list,\n        }}\n      />\n    </chakra.div>\n  )\n})\n\nif (__DEV__) {\n  MenuList.displayName = \"MenuList\"\n}\n\nexport interface StyledMenuItemProps extends HTMLChakraProps<\"button\"> {}\n\nconst StyledMenuItem = forwardRef<StyledMenuItemProps, \"button\">(\n  (props, ref) => {\n    const { type, ...rest } = props\n    const styles = useStyles()\n\n    /**\n     * Given another component, use its type if present\n     * Else, use no type to avoid invalid html, e.g. <a type=\"button\" />\n     * Else, fall back to \"button\"\n     */\n    const btnType = rest.as ? type ?? undefined : \"button\"\n\n    const buttonStyles: SystemStyleObject = {\n      textDecoration: \"none\",\n      color: \"inherit\",\n      userSelect: \"none\",\n      display: \"flex\",\n      width: \"100%\",\n      alignItems: \"center\",\n      textAlign: \"left\",\n      flex: \"0 0 auto\",\n      outline: 0,\n      ...styles.item,\n    }\n\n    return (\n      <chakra.button ref={ref} type={btnType} {...rest} __css={buttonStyles} />\n    )\n  },\n)\n\ninterface MenuItemOptions\n  extends Pick<UseMenuItemProps, \"isDisabled\" | \"isFocusable\"> {\n  /**\n   * The icon to render before the menu item's label.\n   * @type React.ReactElement\n   */\n  icon?: React.ReactElement\n  /**\n   * The spacing between the icon and menu item's label.\n   * @type SystemProps[\"mr\"]\n   */\n  iconSpacing?: SystemProps[\"mr\"]\n  /**\n   * Right-aligned label text content, useful for displaying hotkeys.\n   */\n  command?: string\n  /**\n   * The spacing between the command and menu item's label.\n   * @type SystemProps[\"ml\"]\n   */\n  commandSpacing?: SystemProps[\"ml\"]\n}\n\nexport interface MenuItemProps\n  extends HTMLChakraProps<\"button\">,\n    MenuItemOptions {}\n\nexport const MenuItem = forwardRef<MenuItemProps, \"button\">((props, ref) => {\n  const {\n    icon,\n    iconSpacing = \"0.75rem\",\n    command,\n    commandSpacing = \"0.75rem\",\n    children,\n    ...rest\n  } = props\n\n  const menuItemProps = useMenuItem(rest, ref) as MenuItemProps\n\n  const shouldWrap = icon || command\n\n  const _children = shouldWrap ? (\n    <chakra.span pointerEvents=\"none\" flex=\"1\">\n      {children}\n    </chakra.span>\n  ) : (\n    children\n  )\n\n  return (\n    <StyledMenuItem\n      {...menuItemProps}\n      className={cx(\"chakra-menu__menuitem\", menuItemProps.className)}\n    >\n      {icon && (\n        <MenuIcon fontSize=\"0.8em\" marginEnd={iconSpacing}>\n          {icon}\n        </MenuIcon>\n      )}\n      {_children}\n      {command && (\n        <MenuCommand marginStart={commandSpacing}>{command}</MenuCommand>\n      )}\n    </StyledMenuItem>\n  )\n})\n\nif (__DEV__) {\n  MenuItem.displayName = \"MenuItem\"\n}\n\nconst CheckIcon: React.FC<PropsOf<\"svg\">> = (props) => (\n  <svg viewBox=\"0 0 14 14\" width=\"1em\" height=\"1em\" {...props}>\n    <polygon\n      fill=\"currentColor\"\n      points=\"5.5 11.9993304 14 3.49933039 12.5 2 5.5 8.99933039 1.5 4.9968652 0 6.49933039\"\n    />\n  </svg>\n)\n\nexport interface MenuItemOptionProps\n  extends UseMenuOptionOptions,\n    Omit<MenuItemProps, keyof UseMenuOptionOptions> {\n  /**\n   * @type React.ReactElement\n   */\n  icon?: React.ReactElement\n  /**\n   * @type SystemProps[\"mr\"]\n   */\n  iconSpacing?: SystemProps[\"mr\"]\n}\n\nexport const MenuItemOption = forwardRef<MenuItemOptionProps, \"button\">(\n  (props, ref) => {\n    const { icon, iconSpacing = \"0.75rem\", ...rest } = props\n\n    const optionProps = useMenuOption(rest, ref) as StyledMenuItemProps\n\n    return (\n      <StyledMenuItem\n        {...optionProps}\n        className={cx(\"chakra-menu__menuitem-option\", rest.className)}\n      >\n        <MenuIcon\n          fontSize=\"0.8em\"\n          marginEnd={iconSpacing}\n          opacity={props.isChecked ? 1 : 0}\n        >\n          {icon || <CheckIcon />}\n        </MenuIcon>\n        <chakra.span flex=\"1\">{optionProps.children}</chakra.span>\n      </StyledMenuItem>\n    )\n  },\n)\n\nMenuItemOption.id = \"MenuItemOption\"\n\nif (__DEV__) {\n  MenuItemOption.displayName = \"MenuItemOption\"\n}\n\nexport interface MenuOptionGroupProps\n  extends UseMenuOptionGroupProps,\n    Omit<MenuGroupProps, \"value\" | \"defaultValue\" | \"onChange\"> {}\n\nexport const MenuOptionGroup: React.FC<MenuOptionGroupProps> = (props) => {\n  const { className, title, ...rest } = props\n  const ownProps = useMenuOptionGroup(rest)\n  return (\n    <MenuGroup\n      title={title}\n      className={cx(\"chakra-menu__option-group\", className)}\n      {...ownProps}\n    />\n  )\n}\n\nif (__DEV__) {\n  MenuOptionGroup.displayName = \"MenuOptionGroup\"\n}\n\nexport interface MenuGroupProps extends HTMLChakraProps<\"div\"> {}\n\nexport const MenuGroup = forwardRef<MenuGroupProps, \"div\">((props, ref) => {\n  const { title, children, className, ...rest } = props\n\n  const _className = cx(\"chakra-menu__group__title\", className)\n  const styles = useStyles()\n\n  return (\n    <chakra.div ref={ref} className=\"chakra-menu__group\" role=\"group\">\n      {title && (\n        <chakra.p className={_className} {...rest} __css={styles.groupTitle}>\n          {title}\n        </chakra.p>\n      )}\n      {children}\n    </chakra.div>\n  )\n})\n\nif (__DEV__) {\n  MenuGroup.displayName = \"MenuGroup\"\n}\n\nexport interface MenuCommandProps extends HTMLChakraProps<\"span\"> {}\n\nexport const MenuCommand = forwardRef<MenuCommandProps, \"span\">(\n  (props, ref) => {\n    const styles = useStyles()\n    return (\n      <chakra.span\n        ref={ref}\n        {...props}\n        __css={styles.command}\n        className=\"chakra-menu__command\"\n      />\n    )\n  },\n)\n\nif (__DEV__) {\n  MenuCommand.displayName = \"MenuCommand\"\n}\n\nexport const MenuIcon: React.FC<HTMLChakraProps<\"span\">> = (props) => {\n  const { className, children, ...rest } = props\n\n  const child = React.Children.only(children)\n\n  const clone = React.isValidElement(child)\n    ? React.cloneElement(child, {\n        focusable: \"false\",\n        \"aria-hidden\": true,\n        className: cx(\"chakra-menu__icon\", child.props.className),\n      })\n    : null\n\n  const _className = cx(\"chakra-menu__icon-wrapper\", className)\n\n  return (\n    <chakra.span\n      className={_className}\n      {...rest}\n      __css={{\n        flexShrink: 0,\n      }}\n    >\n      {clone}\n    </chakra.span>\n  )\n}\n\nif (__DEV__) {\n  MenuIcon.displayName = \"MenuIcon\"\n}\n\nexport interface MenuDividerProps extends HTMLChakraProps<\"hr\"> {}\n\nexport const MenuDivider: React.FC<MenuDividerProps> = (props) => {\n  const { className, ...rest } = props\n  const styles = useStyles()\n  return (\n    <chakra.hr\n      role=\"separator\"\n      aria-orientation=\"horizontal\"\n      className={cx(\"chakra-menu__divider\", className)}\n      {...rest}\n      __css={styles.divider}\n    />\n  )\n}\n\nif (__DEV__) {\n  MenuDivider.displayName = \"MenuDivider\"\n}\n"],"file":"menu.js"}