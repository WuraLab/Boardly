
# name: Backend workflow for Golang using Snyk

# on:
#   push:
#     branches: [ master ]
#   pull_request:
#     branches: [ master ]
    
# jobs:
#    security::
#     runs-on: ubuntu-latest
#     strategy:
#        matrix:
#          go-version: [1.13, 1.14, 1.15, 1.x]
         
         
#     steps:
#       - uses: actions/checkout@master
#       - name: Run Snyk to check for vulnerabilities
#         uses: snyk/actions/golang@master
#         continue-on-error: true # To make sure that SARIF upload gets called
#         env:
#           SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
#         with:
#           args: --sarif-file-output=snyk.sarif
#           go-version: ${{ matrix.go-version }}

#       - name: Upload result to GitHub Code Scanning
#         uses: github/codeql-action/upload-sarif@v1
#         with:
#           sarif_file: snyk.sarif


name: Example workflow for Golang using Snyk
on: push
jobs:
  security:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/golang@master
        continue-on-error: true # To make sure that SARIF upload gets called
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --sarif-file-output=snyk.sarif
      - name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: snyk.sarif
